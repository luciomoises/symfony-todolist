security:
    role_hierarchy:
        ROLE_ADMIN: [ROLE_USER]

    encoders:
        Symfony\Component\Security\Core\User\User:
            algorithm: bcrypt
        App\Entity\User:
            algorithm: bcrypt

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        #chain_provider:
        #    chain:
        #        providers:
        #            - in_memory
        #            - db_provider
        #in_memory:
        #    memory:
        #        users:
        #            admin@admin.com:
        #                password: $2y$13$T/tAlbG7nfD3ocOQ02rxqOoHVdOA8Wg8WIq4TnSQm183FUWvt2vwi
        #                roles: 'ROLE_ADMIN'
        db_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern: ^/
            provider: db_provider
            form_login:
                login_path: login
                check_path: login

            logout: true
            anonymous: true

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/(login|register)$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/, role: ROLE_USER}
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
